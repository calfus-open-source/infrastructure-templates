provider "aws" {
  region     = "{{ aws_region }}"
}

terraform {
     backend "s3" {
     }
 }

module "vpc" {
  source = "./modules/vpc"
  name = "${ var.project_name }-${ var.environment }-vpc"
  environment = "${ var.environment }"
  cidr = "${ var.vpc_cidr }"
}

module "security_group"{
    source = "./modules/security-groups"
    name                    = "${ var.project_name }"
    environment             = "${ var.environment }"
    vpc_id                  = module.vpc.id
}

module "ssh-key" {
  source          = "./modules/ssh-key"
  ssh_key_name    = "${ var.project_name }-${ var.environment }-key"
  env_files_bucket_name = "${ var.project_name }-${ var.environment }-bucket"
}

module "bastion" {
  source                     = "./modules/bastion"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  vpc_public_subnets         = module.vpc.public_subnets[0]
  name                       = "${ var.project_name }-${ var.environment }-bastion"
  project_id                 = var.project_id
  environment                = var.environment
  project_name               = var.project_name
}

module "master" {
  source                     = "./modules/master"
  ssh_key_name               = module.ssh-key.ssh_key_name
  default_security_group_id  = module.vpc.default_security_group_id
  vpc_private_subnets        = module.vpc.private_subnets[0]
  name                       = "${ var.project_name }-${ var.environment }-master"
  project_id                 = var.project_id
  environment                = var.environment
  project_name               = var.project_name
}


locals {
  rendered_template = templatefile("./ssh-config.tftpl", {
    project_name = "${ var.project_name }"
    environment  = "${ var.environment }"
    bastion_ips   = module.bastion.k8s-bastion-ips
    master_ips    = module.master.k8s-master-ips
  })
}

resource "null_resource" "ssh_config" {
  provisioner "local-exec" {
    command = "echo '${local.rendered_template}' >> ~/.ssh/config"
  }
}

